.PHONY: build

PROJROOT=@{PROJROOT}
VERION=@{VERSION}
TOOLSET=@{TOOLSET}

FDEBUG=@{FDEBUG}
FBITS=@{FBITS}
FJNI=@{FJNI}
FLIBNAME=@{FLIBNAME}


#=============================================
ODIR=$(PROJROOT)/lib


STATIC_LIB=$(ODIR)/$(FLIBNAME).lib


DYNMIC_LIB=$(ODIR)/$(FLIBNAME).dll


PACKAGE=$(ODIR)/smq.zip


SRCS=\
    $(PROJROOT)/smq_errors.c    \
    $(PROJROOT)/smq_inst.c      \
    $(PROJROOT)/smq_logs.c      \
    $(PROJROOT)/smq_msg.c       \
    $(PROJROOT)/smq_os.c        \
    $(PROJROOT)/smq_params.c    \
    $(PROJROOT)/smq_utils.c
ifeq    ($(FJNI),"jni")
SRCS=$(SRCS) $(PROJROOT)/jni/smq_jni.c
endif


OBJS=$(SRC:.c=.o)


INCS=\
    $(PROJROOT)                 \
    $(PROJROOT)/jni
ifeq    ($(FJNI),"jni")
SRCS=$(INCS) $(PROJROOT)/jni
endif


LIBS=\
    -c                          \
    -lpthread

#   Compile tool and options
CC="gcc"
CCFLAGS=""
ifeq ($(FDEBUG),"d")
CCFLAGS="-g -DDEBUG -UNDEBUG"
endif


#   Linker tool and options
LD="gcc"
LDFLAGS="â€“shared"
ifeq ($(FDEBUG),"d")
CCFLAGS="$(CCFLAGS) -g"
endif


#   Archive tool and options
AR="ar"
ARFLAG=""


#=============================================
go:$(ENTRY_TARGETS)


clean:
	rm  -rf  ${PACKAGE}  $(STATIC_LIB)  $(DYNMIC_LIB)  $(OBJS)  $(ODIR)


build:$(STATIC_LIB) $(DYNMIC_LIB)
	

package:$(STATIC_LIB) $(DYNMIC_LIB)
	rm      -rf     $(PROJROOT)/smq-${VERSION}.zip
	rm      -rf     ${ODIR}/pkg
	mkdir   -p      ${ODIR}/pkg/lib
	mkdir   -p      ${ODIR}/pkg/include
	cp      $(STATIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(DYNMIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(PROJROOT)/smq.h   ${ODIR}/pkg/include &&  \
	cd      ${ODIR}/pkg                             &&  \
	zip     smq-${VERSION}.zip  *                   &&  \
	cp      smq-${VERSION}.zip  $(PROJROOT)


#   Create the static library
$(STATIC_LIB):$(OBJS)
	$(AR)   $(ARFLAGS) $(OBJS) -o  $@


#   Create the dynamic library
$(DYNMIC_LIB):$(OBJS)
	$(LD)   $(LDFLAGS) $(OBJS) -o  $@


#   Create the object files
.c.o:
	$(CC)   $(CCFLAGS) -c  $<  -o  $@


