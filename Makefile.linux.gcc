.PHONY: build

PROJROOT=@{PROJROOT}
VERION=@{VERSION}
TOOLSET=@{TOOLSET}

FDEBUG=@{FDEBUG}
FBITS=@{FBITS}
FJNI=@{FJNI}
FLIBNAME=@{FLIBNAME}


#=============================================
ODIR=$(PROJROOT)/lib


STATIC_LIB=$(ODIR)/$(FLIBNAME).lib


DYNMIC_LIB=$(ODIR)/$(FLIBNAME).dll


PACKAGE=$(ODIR)/smq-$(FDEBUG)$(FBITS)$(FJNI)-$(VERSION).zip


SRCS=\
    smq_errors.c    \
    smq_inst.c      \
    smq_logs.c      \
    smq_msg.c       \
    smq_os.c        \
    smq_params.c    \
    smq_utils.c
ifeq    ($(FJNI),jni)
    SRCS += jni/smq_jni.c
endif


OBJS=$(SRCS:.c=.o)


INCS=\
    $(PROJROOT)                 \
    $(PROJROOT)/jni
ifeq    ($(FJNI),jni)
    INCS += $(PROJROOT)/jni
endif


LIBS=\
    -c                          \
    -lpthread


#   Compile tool and options
CC=gcc
CCFLAGS=-DSMQ_EXPORTS
ifeq ($(FDEBUG),d)
    CCFLAGS += -g -DDEBUG -UNDEBUG
endif
ifeq ($(FBITS),32)
    CCFLAGS += -m32
else
    CCFLAGS += -m64
endif


#   Linker tool and options
LD=gcc
LDFLAGS=â€“shared
ifeq ($(FDEBUG),d)
    LDFLAGS += -g
endif
ifeq ($(FBITS),32)
    LDFLAGS += -m32
else
    LDFLAGS += -m64
endif


#   Archive tool and options
AR=ar
ARFLAGS=
ifeq ($(FBITS),32)
    ARFLAGS += -m32
else
    ARFLAGS += -m64
endif


#=============================================
build:$(STATIC_LIB) $(DYNMIC_LIB)


clean:
	rm  -rf  ${PACKAGE}  $(STATIC_LIB)  $(DYNMIC_LIB)  $(OBJS)  $(ODIR)


package:$(STATIC_LIB) $(DYNMIC_LIB)
	rm      -rf     $(PROJROOT)/smq-${VERSION}.zip
	rm      -rf     ${ODIR}/pkg
	mkdir   -p      ${ODIR}/pkg/lib
	mkdir   -p      ${ODIR}/pkg/include
	cp      $(STATIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(DYNMIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(PROJROOT)/smq.h   ${ODIR}/pkg/include &&  \
	cd      ${ODIR}/pkg                             &&  \
	zip     smq-${VERSION}.zip  *                   &&  \
	cp      smq-${VERSION}.zip  $(PROJROOT)


#   Create the static library
$(STATIC_LIB):$(OBJS)
	$(AR)   $(ARFLAGS) $(OBJS) -o  $@


#   Create the dynamic library
$(DYNMIC_LIB):$(OBJS)
	$(LD)   $(LDFLAGS) $(OBJS) -o  $@


#   Create the object files
#%.o:%.c
#	$(CC)   $(CCFLAGS) -c  $<  -o  $@

.c.o:
	$(CC)   $(CCFLAGS) -c  $<  -o  $@

#smq_errors.o:smq_errors.c
#	$(CC)   $(CCFLAGS) -c  $<  -o  $@
