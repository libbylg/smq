.PHONY: build

PROJROOT=@{PROJROOT}
VERION=@{VERSION}
TOOLSET=@{TOOLSET}
MAKE=@{MAKE}
FDYNMICSUFFIX=@{FDYNMICSUFFIX}
FSTATICSUFFIX=@{FSTATICSUFFIX}

FDEBUG=@{FDEBUG}
FBITS=@{FBITS}
FOS=@{FOS}
FJNI=@{FJNI}
FLIBNAME=@{FLIBNAME}


#=============================================
ODIR=$(PROJROOT)/lib


STATIC_LIB=$(ODIR)/$(FLIBNAME).$(FSTATICSUFFIX)


DYNMIC_LIB=$(ODIR)/$(FLIBNAME).$(FDYNMICSUFFIX)


PACKAGE=$(ODIR)/smq-$(FDEBUG)$(FBITS)$(FJNI)-$(VERSION).zip


SRCS=\
    smq_errors.c    \
    smq_inst.c      \
    smq_logs.c      \
    smq_msg.c       \
    smq_os.c        \
    smq_params.c    \
    smq_utils.c
ifeq    ($(FJNI),jni)
    SRCS += jni/smq_jni.c
endif


OBJS=$(SRCS:.c=.o)


INCS=-I.
ifeq    ($(FJNI),jni)
    INCS += -Ijni
endif


LIBS=-c -lpthread


#   Compile tool and options
CC=cl.exe
CCFLAGS=/Zi /nologo /W3 /WX- /O2 /Oi /GL /D "WIN32" /D "_WINDOWS" /D "_USRDLL" /D "SMQ_EXPORTS" /D "_WINDLL" /D "_MBCS" /Gm- /EHsc /GS /Gy /fp:precise /Zc:wchar_t /Zc:forScope /Fp"out\Win32-Release\smq.pch" /Fa"out\Win32-Release\" /Fo"out\Win32-Release\" /Fd"out\Win32-Release\vc100.pdb" /Gd /TP /errorReport:queue 
ifeq ($(FDEBUG),d)
    CCFLAGS +=  /D "DEBUG"
else
    CCFLAGS +=  /D "NDEBUG"
endif
ifeq ($(FBITS),32)
    CCFLAGS += -m32
else
    CCFLAGS += -m64
endif


#   Linker tool and options
LD=link.exe
LDFLAGS=/OUT:"out\Win32-Release\smq.dll" /INCREMENTAL:NO /NOLOGO /DLL "kernel32.lib" "user32.lib" "gdi32.lib" "winspool.lib" "comdlg32.lib" "advapi32.lib" "shell32.lib" "ole32.lib" "oleaut32.lib" "uuid.lib" "odbc32.lib" "odbccp32.lib" /DEF:"os\win.msvc\smq.def" /MANIFEST:NO /ManifestFile:"out\Win32-Release\smq.dll.intermediate.manifest" /ALLOWISOLATION /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /PDB:"out\Win32-Release\smq.pdb" /SUBSYSTEM:WINDOWS /OPT:REF /OPT:ICF /PGD:"out\Win32-Release\smq.pgd" /LTCG /TLBID:1 /DYNAMICBASE /NXCOMPAT /MACHINE:X86 /ERRORREPORT:QUEUE 
ifeq ($(FDEBUG),d)
    LDFLAGS +=  /DEBUG
endif
ifeq ($(FBITS),32)
    LDFLAGS += -m32
else
    LDFLAGS += -m64
endif


#   Archive tool and options
AR=ar
ARFLAGS=
ifeq ($(FBITS),32)
    ARFLAGS += -m32
else
    ARFLAGS += -m64
endif


#=============================================
build:$(STATIC_LIB) $(DYNMIC_LIB)


clean:
	rm  -rf  ${PACKAGE}  $(STATIC_LIB)  $(DYNMIC_LIB)  $(OBJS)  $(ODIR)


package:$(STATIC_LIB) $(DYNMIC_LIB)
	rm      -rf     $(PROJROOT)/smq-${VERSION}.zip
	rm      -rf     ${ODIR}/pkg
	mkdir   -p      ${ODIR}/pkg/lib
	mkdir   -p      ${ODIR}/pkg/include
	cp      $(STATIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(DYNMIC_LIB)       ${ODIR}/pkg/lib     &&  \
	cp      $(PROJROOT)/smq.h   ${ODIR}/pkg/include &&  \
	cd      ${ODIR}/pkg                             &&  \
	zip     smq-${VERSION}.zip  *                   &&  \
	cp      smq-${VERSION}.zip  $(PROJROOT)


#   Create the static library
$(STATIC_LIB):$(OBJS)
	$(AR)   $(ARFLAGS) $(OBJS) -o  $@


#   Create the dynamic library
$(DYNMIC_LIB):$(OBJS)
	$(LD)   $(LDFLAGS) $(LIBS) $(OBJS) -o  $@


%.o:%.c
	$(CC)   $(CCFLAGS) $(INCS) -c  $<  -o  $@

