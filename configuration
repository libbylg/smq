#!/usr/bin/bash



#   The shared options and the default value
SELFDIR=$(cd  $(dirname "$0");pwd)
VERSION=$(cat ${SELFDIR}/VERSION)
FBITS="64"
FDEBUG="d"
FJNI=""
FLIBNAME="smq"
MAKE="make"
TOOLSET="linux.gcc"


#   Show detial of helps
function show_help()
{
    echo    "Usage:"
    echo    "   configuration [--x32|--x64] [--nodebug] [--jni] [--toolset=<TOOLSET-NAME>]"
    echo    "   configuration -h|--help"
    echo    ""
    echo    "Options:"
    echo    "   --x32|--x64     To tell the script to build the 32-bits or the 64-bits library."
    echo    "   --nodebug       Do we need the symbles for debug or not."
    echo    "   --jni           To tell the script to build with the JNI supported."
    echo    "   --toolset=<TOOLSET-NAME>    To special the which toolset whill be used to compile."
    echo    ""
    echo    "Examples:"
    echo    ""
}


#function    determine_toolset()
#{
#    if [ "xWindows_NT" == "x${OS}" ]; then
#
#    fi
#}


#   Create all of the options
function    ready_options()
{
    #   Enum all of the arguments and fill the shared option-vars.
    for (( i = 1; i < $#; i++ )); do
        local arg=$(eval "\$${i}")
        case "${arg}" in
            "--32")
                FBITS=32
                ;;
            "--64")
                FBITS=64
                ;;
            "--nodebug")
                FDEBUG="r"
                ;;
            "--jni")
                FJNI="jni"
                ;;
            "--toolset=.*")
                TOOLSET=$(echo ${arg} | sed 's/--toolset=\(.*\)/\1/g')
                ;;
            *)
                echo    "Unsupported options '${arg}', ignored"
                ;;
        esac
    done



}



function generage_makefile()
{
    #   Build the options
    ready_options   "$@"
    RESULT=$?
    if [ ${RESULT} -ne 0 ]; then
        echo    "${RESULT}:Read options failed"
        return  ${RESULT}
    fi


    #   Replace vars in the makefile-template, and create the real makefile.
    rm  -rf ${SELFDIR}/Makefile
    dos2unix    -q   ${SELFDIR}/Makefile.${TOOLSET} >& /dev/null
    cat ${SELFDIR}/Makefile.${TOOLSET}  |   \
    sed "s|@{PROJROOT}|${SELFDIR}|g"    |   \
    sed "s|@{VERSION}|${VERSION}|g"     |   \
    sed "s|@{TOOLSET}|${TOOLSET}|g"     |   \
    sed "s|@{FDEBUG}|${FDEBUG}|g"       |   \
    sed "s|@{FBITS}|${FBITS}|g"         |   \
    sed "s|@{FJNI}|${FJNI}|g"           |   \
    sed "s|@{FLIBNAME}|${FLIBNAME}|g"   >   ${SELFDIR}/Makefile
    RESULT=$?
    if [ ${RESULT} -ne 0 ]; then
        echo    "${RESULT}:Generate makefile failed"
        return  ${RESULT}
    fi

    return  0
}


#   The main entry function
function main()
{
    if [ $# -gt 0 ]; then
        if [ "x-h" == "x$1" ] || [ "x--help" == "x$1" ]; then
            show_help
            return  0
        fi
    fi

    generage_makefile   "$@"
    RESULT=$?
    if  [ ${RESULT} -ne 0 ]; then
        return  2
    fi

    return  0
}



main    "$@"
exit     $?

